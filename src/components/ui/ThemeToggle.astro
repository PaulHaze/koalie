---
import { cn } from '@/utils';
---

<button
	id="header-theme-button"
	aria-label={`Toggle light and dark theme`}
	class={cn(
		'flex',
		'size-9 rounded-full p-2 items-center justify-center',
		'hover:bg-black/5 dark:hover:bg-white/20',
		'stroke-current hover:stroke-black hover:dark:stroke-white',
		'transition-colors duration-300 ease-in-out'
	)}
>
	<svg class="block size-full bg-transparent dark:hidden">
		<use href="/ui.svg#sun"></use>
	</svg>
	<svg class="hidden size-full bg-transparent dark:block">
		<use href="/ui.svg#moon"></use>
	</svg>
</button>

<script>
	function changeTheme() {
		const element = document.documentElement;
		const theme = element.classList.contains('dark') ? 'light' : 'dark';

		const css = document.createElement('style');

		css.appendChild(
			document.createTextNode(
				`* {
           -webkit-transition: none !important;
           -moz-transition: none !important;
           -o-transition: none !important;
           -ms-transition: none !important;
           transition: none !important;
        }`
			)
		);
		document.head.appendChild(css);

		if (theme === 'dark') {
			element.classList.add('dark');
			element.setAttribute('data-theme', 'dark');
		} else {
			element.classList.remove('dark');
			element.setAttribute('data-theme', 'light');
		}

		window.getComputedStyle(css).opacity;
		document.head.removeChild(css);
		localStorage.theme = theme;
	}

	function preloadTheme() {
		const theme = (() => {
			const userTheme = localStorage.theme;

			if (userTheme === 'light' || userTheme === 'dark') {
				return userTheme;
			} else {
				return window.matchMedia('(prefers-color-scheme: dark)').matches
					? 'dark'
					: 'light';
			}
		})();

		const element = document.documentElement;

		if (theme === 'dark') {
			element.classList.add('dark');
			element.setAttribute('data-theme', 'dark');
		} else {
			element.classList.remove('dark');
			element.setAttribute('data-theme', 'light');
		}

		localStorage.theme = theme;
	}

	window.onload = () => {
		function initializeThemeButtons() {
			const headerThemeButton = document.getElementById('header-theme-button');
			headerThemeButton?.addEventListener('click', changeTheme);
		}

		document.addEventListener('astro:after-swap', initializeThemeButtons);
		initializeThemeButtons();
	};

	document.addEventListener('astro:after-swap', preloadTheme);

	preloadTheme();
</script>
